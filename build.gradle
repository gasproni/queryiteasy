plugins {
    id 'net.researchgate.release' version '2.4.0'
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'findbugs'

sourceSets {
    acceptanceTest {
        java {
            srcDir 'src/acceptanceTest/java'
        }
        resources {
            srcDir 'src/acceptanceTest/resources'
        }
        compileClasspath += sourceSets.main.runtimeClasspath + sourceSets.test.compileClasspath
        runtimeClasspath += compileClasspath
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

task acceptanceTest(type: Test, dependsOn: test) {
    description = 'Runs the acceptance tests'
    group = 'verification'
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath += sourceSets.acceptanceTest.runtimeClasspath
    reports.junitXml.destination = buildDir.path +'/acceptance-test-results'
    reports.html.destination = buildDir.path +'/reports/acceptanceTest'
}

// Generates some dummy dirs necessary for the testJar task to work.
// Not sure how to avoid that.
task makeDummyDirs << {
    mkdir(buildDir.path +'/resources/acceptanceTest')
    mkdir(buildDir.path +'/resources/test')
    mkdir(buildDir.path +'/resources/main')
}

task testJar(type: Jar, dependsOn: [build, makeDummyDirs, acceptanceTest]) {
    manifest.from jar.manifest
    classifier = 'test'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    from fileTree(
            sourceSets.acceptanceTest.output.classesDir
    ) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"

    }
    from {
        sourceSets.acceptanceTest.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

check {
    dependsOn(acceptanceTest)
}

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "high"
}

dependencies {
    testCompile 'org.hamcrest:hamcrest-all:1.3', 'junit:junit:4.12', 'org.mockito:mockito-all:1.10.19'
    acceptanceTestCompile 'org.hsqldb:hsqldb:2.3.3', files(file('jdbclibs').listFiles())
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
    module {
        scopes.TEST.plus += [configurations.acceptanceTestCompile]
    }
}